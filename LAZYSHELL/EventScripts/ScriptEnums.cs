using System;
using System.Collections.Generic;
using System.Text;

namespace LazyShell.EventScripts
{
    public static class ScriptEnums
    {
        #region Command lengths

        private static int[] EventLengths = new int[]
        {
         // 0 1 2 3 4 5 6 7   8 9 A B C D E F
            0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, // 0x00
            0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, // 0x10
            0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, // 0x20
            1,1,4,4,2,2,2,1,  2,4,7,7,6,3,5,4, // 0x30
            //
            3,3,5,1,3,3,2,2,  0,1,4,3,2,1,3,2, // 0x40
            2,2,2,2,3,1,2,1,  1,1,1,1,3,1,1,1, // 0x50
            //
            4,3,3,2,1,1,3,5,  6,1,3,3,1,1,1,1, // 0x60
            1,1,2,2,1,1,2,2,  3,3,1,1,1,1,1,1, // 0x70
            5,4,1,2,3,1,1,4,  1,4,3,1,1,1,1,4, // 0x80
            2,2,2,1,1,3,3,3,  3,1,1,1,2,3,3,3, // 0x90
            2,2,2,1,2,2,2,1,  3,3,2,2,3,3,1,1, // 0xA0
            4,4,2,2,2,2,3,4,  2,2,2,2,3,3,1,1, // 0xB0
            3,2,4,1,2,2,2,2,  2,2,1,1,1,1,1,1, // 0xC0
            3,3,3,3,2,3,2,1,  4,4,4,3,4,4,4,3, // 0xD0
            5,5,5,5,6,6,5,5,  3,5,3,3,3,3,3,3, // 0xE0
            2,3,3,3,1,1,1,1,  5,1,1,1,1,0,1,1  // 0xF0
        };
        private static int[] EventFDLengths = new int[]
        {
         // 0 1 2 3 4 5 6 7   8 9 A B C D E F
            0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, // 0x00
            0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, // 0x10
            0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, // 0x20
            2,2,2,5,5,2,2,2,  2,2,2,2,2,5,7,4, // 0x30
            //
            2,2,2,2,2,2,4,2,  2,2,2,2,3,3,2,2, // 0x40
            2,2,2,2,2,2,2,2,  3,2,2,2,2,4,2,2, // 0x50
            //
            2,2,4,2,2,2,4,2,  2,2,2,2,2,2,2,2, // 0x60
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0x70
            2,2,2,2,2,2,2,2,  3,3,3,3,5,2,5,3, // 0x80
            4,2,2,2,3,3,5,5,  3,2,2,2,3,4,3,2, // 0x90
            2,2,2,2,2,2,2,2,  3,3,3,2,4,2,2,2, // 0xA0
            4,4,4,3,3,3,4,3,  2,2,2,2,2,2,2,2, // 0xB0
            2,2,2,2,2,2,2,2,  4,2,2,2,2,2,2,2, // 0xC0
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0xD0
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0xE0
            6,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2  // 0xF0        
        };
        private static int[] ActionLengths = new int[]
        {
         // 0 1 2 3 4 5 6 7   8 9 A B C D E F
            1,1,1,1,1,1,1,1,  3,1,2,2,2,2,2,1, // 0x00
            2,2,2,2,2,2,1,1,  1,1,1,1,1,1,1,1, // 0x10
            2,1,1,2,5,5,16,16,16,2,1,5,3,3,3,7, // 0x20
            3,3,3,3,2,3,1,1,  1,1,6,6,5,3,5,4, // 0x30
            //
            1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1, // 0x40
            2,2,2,2,2,2,2,2,  2,1,2,2,1,1,1,1, // 0x50
            2,2,2,2,2,2,2,2,  2,1,2,2,1,1,1,1, // 0x60
            1,1,1,1,1,1,1,1,  1,1,1,2,1,2,3,3, // 0x70
            3,3,3,3,3,1,1,2,  1,1,1,1,1,1,1,1, // 0x80
            4,4,4,4,4,2,2,2,  1,1,1,1,2,3,3,3, // 0x90
            2,2,2,1,2,2,2,1,  3,3,2,2,3,3,1,1, // 0xA0
            4,4,2,2,2,2,3,4,  2,2,2,2,3,3,1,1, // 0xB0
            3,2,4,1,2,2,2,2,  2,2,1,1,1,1,1,1, // 0xC0
            3,1,3,3,2,1,2,1,  4,4,4,3,4,4,4,3, // 0xD0
            5,5,5,5,6,6,5,5,  3,5,3,3,3,3,3,3, // 0xE0
            2,3,3,3,1,1,1,1,  5,1,1,1,1,0,1,1  // 0xF0
        };
        private static int[] ActionFDLengths = new int[]
        {
         // 0 1 2 3 4 5 6 7   8 9 A B C D E F
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,3, // 0x00
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0x10
            5,2,2,4,4,2,2,2,  2,2,2,2,2,2,2,2, // 0x20
            8,8,7,5,2,2,2,2,  2,2,2,2,2,5,7,5, // 0x30
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0x40
            2,2,2,2,2,2,2,2,  2,2,2,3,2,2,2,2, // 0x50
            2,2,2,2,2,2,3,2,  2,2,2,2,2,2,2,2, // 0x60
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0x70
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0x80
            2,2,2,2,2,2,2,2,  2,2,2,2,3,2,3,2, // 0x90
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0xA0
            4,4,4,3,3,3,4,2,  2,2,2,2,2,2,2,2, // 0xB0
            2,2,2,2,2,2,2,2,  4,2,2,2,2,2,2,2, // 0xC0
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0xD0
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0xE0
            2,2,2,2,2,2,2,2,  2,2,2,2,2,2,2,2, // 0xF0        
        };

        #endregion

        public static int GetEventCommandLength(int opcode, int param1)
        {
            int length = EventLengths[opcode];
            if (length == 0 && opcode > 0x2F)
                length = EventFDLengths[param1];
            if (length == 0 && (opcode <= 0x2F && param1 >= 0xF2))
            {
                if (param1 >= 0 && param1 <= 0x7F || param1 >= 0xF6 && param1 <= 0xFF)
                    length = 2;
                else if (param1 == 0xF0 || param1 == 0xF1)
                    length = 3;
                else if (param1 == 0xF2 || param1 == 0xF3 || param1 == 0xF4 || param1 == 0xF5)
                    length = 4;
            }
            if (length == 0) // Now we have to be dealing with Event Command that triggers an action queue
            {
                if (param1 == 0xF0 || param1 == 0xF1)
                {
                    return 3; // problem because we need byte 3!
                }
                else
                    length = 2;
                length += param1 & 0x7F; // Max value of 127 0x7F
            }
            if (length == 0)
                throw new Exception("Invalid Length");
            return length;
        }
        public static int GetActionCommandLength(int opcode, int param1)
        {
            int length;
            if (opcode == 0xFD)
                length = ActionFDLengths[param1];
            else
                length = ActionLengths[opcode];
            if (length == 0)
                throw new Exception("Invalid Length");
            return length;
        }
    }

    /// <summary>
    /// Limitations on the insertion of a new command in a given scenario.
    /// </summary>
    public enum CommandLimiter
    {
        EventOrAction, EventOnly, ActionOnly
    }
}
